apiVersion: v1
kind: Namespace
metadata:
  name: agenta-dev

---

apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy
  namespace: agenta-dev
spec:
  ports:
    - name: web
      port: 80
      targetPort: 80
  selector:
    app: reverse-proxy

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverse-proxy
  template:
    metadata:
      labels:
        app: reverse-proxy
    spec:
      containers:
        - name: reverse-proxy
          image: traefik:v2.10
          ports:
            - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: agenta-dev
spec:
  ports:
    - name: web
      port: 8000
      targetPort: 8000
  selector:
    app: backend

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: 517727162249.dkr.ecr.ap-northeast-2.amazonaws.com/iab/agenta-backend-dev
          ports:
            - containerPort: 8000
          env:
            - name: MONGODB_URI
              value: "mongodb://username:password@mongo:27017"
            - name: ENVIRONMENT
              value: "development"
            - name: BARE_DOMAIN_NAME
              value: "localhost"
            - name: FEATURE_FLAG
              value: "oss"
          command: ["uvicorn"]
          args: ["agenta_backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "info", "--root-path", "/api"]

---

apiVersion: v1
kind: Service
metadata:
  name: agenta-web
  namespace: agenta-dev
spec:
  ports:
    - name: web
      port: 3000
      targetPort: 3000
  selector:
    app: agenta-web

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: agenta-web
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agenta-web
  template:
    metadata:
      labels:
        app: agenta-web
    spec:
      containers:
        - name: agenta-web
          image: 517727162249.dkr.ecr.ap-northeast-2.amazonaws.com/iab/agenta-web-dev
          ports:
            - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: agenta-dev
spec:
  ports:
    - name: db
      port: 27017
      targetPort: 27017
  selector:
    app: mongo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:5.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "username"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"

---
# Mongo Express Service and Deployment
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
  namespace: agenta-dev
spec:
  ports:
    - name: web
      port: 8081
      targetPort: 8081
  selector:
    app: mongo-express

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: "username"
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: "password"
            - name: ME_CONFIG_MONGODB_SERVER
              value: "mongo"

---
# Redis Service and Deployment
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: agenta-dev
spec:
  ports:
    - name: db
      port: 6379
      targetPort: 6379
  selector:
    app: redis

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: agenta-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
